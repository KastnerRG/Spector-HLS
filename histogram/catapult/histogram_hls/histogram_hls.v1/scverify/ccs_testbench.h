// ----------------------------------------------------------------------------
// User Testbench Interface Header
//
//    HLS version: 10.4/828904 Production Release
//       HLS date: Thu Jul 25 13:12:11 PDT 2019
//  Flow Packages: HDL_Tcl 8.0a, SCVerify 10.4
//
//   Generated by: mdk@mdk-FX504
// Generated date: Sun Oct 13 12:33:20 PDT 2019
//
// ----------------------------------------------------------------------------

#ifndef CCS_TESTBENCH_H
#define CCS_TESTBENCH_H
#include <ac_int.h>
#include <ac_channel.h>
#include "mc_wait_ctrl.h"

class testbench
{
   public:
   int argc;
   const char* const *argv;
   int main(); //CCS_MAIN
   static bool enable_idle_sync_mode;
   static unsigned short idle_sync_stable_cycles;
   static void set_enable_stalls(bool flag);
   static void reset_request();
   static bool data_in_data_ignore;
   static bool data_in_data_skip;
   static bool data_in_data_skip_quiet;
   static bool data_in_data_skip_once;
   static bool data_in_data_skip_noerr;
   static int  data_in_data_array_comp_first;
   static int  data_in_data_array_comp_last;
   static mc_wait_ctrl data_in_data_wait_ctrl;
   static bool hist_out_data_ignore;
   static bool hist_out_data_skip;
   static bool hist_out_data_skip_quiet;
   static bool hist_out_data_skip_once;
   static bool hist_out_data_skip_noerr;
   static int  hist_out_data_array_comp_first;
   static int  hist_out_data_array_comp_last;
   static bool hist_out_data_use_mask;
   static ac_int<8, false > hist_out_data_output_mask;
   static mc_wait_ctrl hist_out_data_wait_ctrl;
   #ifndef CCS_SCVERIFY_USE_CCS_BLOCK
   static void exec_histogram_hls( ac_channel<DATA_MEM > &data_in,  ac_channel<HIST_MEM > &hist_out);
   #endif
   explicit testbench(int _argc, const char* const *_argv)
      :argc(_argc), argv(_argv)
   {
   }
   ~testbench()
   {
   }
   private:
   testbench() {}
};
extern void mc_testbench_reset_request();
extern void mc_testbench_data_in_data_skip(bool v);
extern void mc_testbench_hist_out_data_skip(bool v);
#endif //CCS_TESTBENCH_H
